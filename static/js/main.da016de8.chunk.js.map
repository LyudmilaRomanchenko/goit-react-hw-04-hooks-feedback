{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","console","log","className","s","statistics","prototype","PropTypes","number","isRequired","func","checkPropTypes","FeedbackOptions","options","onLeaveFeedback","listButton","map","option","index","listButtonItem","type","button","onClick","arrayOf","shape","name","string","value","Section","title","children","section","object","Notification","message","App","useState","setGood","setNeutral","setBad","state","countTotalFeedback","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da016de8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listButton\":\"FeedbackOptions_listButton__1UQuM\",\"listButtonItem\":\"FeedbackOptions_listButtonItem__1j5sy\",\"button\":\"FeedbackOptions_button__H1Flw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__9ARvc\",\"title\":\"Section_title__10xmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics___bJoj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1y6cZ\"};","// import React from 'react';\nimport s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  console.log(good);\n  return (\n    <div className={s.statistics}>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>\n          Positive feedback: {positivePercentage ? positivePercentage : 0}%\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nStatistics.prototype = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(Statistics);\n\nexport default Statistics;\n","// import React from 'react';\nimport s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  console.log(options);\n\n  return (\n    <ul className={s.listButton}>\n      {options.map((option, index) => {\n        console.log(option);\n        return (\n          <li className={s.listButtonItem} key={index}>\n            <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => onLeaveFeedback(option)}\n            >\n              {option}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nFeedbackOptions.prototype = {\n  // options: PropTypes.array.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.checkPropTypes(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n      }).isRequired,\n    ),\n  ),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(FeedbackOptions);\n\nexport default FeedbackOptions;\n\n// class FeedbackOptions extends React.Component {\n//   render() {\n//     console.log(this.props.options);\n\n//     return (\n//       <ul className={s.listButton}>\n//         {this.props.options.map((option, index) => {\n//           console.log(option);\n//           return (\n//             <li className={s.listButtonItem} key={index}>\n//               <button\n//                 type=\"button\"\n//                 className={s.button}\n//                 onClick={() => this.props.onLeaveFeedback(option)}\n//               >\n//                 {option}\n//               </button>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     );\n//   }\n// }\n","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <p className={s.title}>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nSection.prototype = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nPropTypes.checkPropTypes(Section);\n\nexport default Section;\n","import s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.prototype = {\n  message: PropTypes.string.isRequired,\n};\n\nPropTypes.checkPropTypes(Notification);\n\nexport default Notification;\n","import React from 'react';\n// import s from './Feedback.module.css';\nimport { useState } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleBtnClick = name => {\n    // console.log(this.state[name]);\n    if (name === 'good') {\n      return setGood(state => state + 1);\n    }\n    if (name === 'neutral') {\n      return setNeutral(state => state + 1);\n    }\n    if (name === 'bad') {\n      return setBad(state => state + 1);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    console.log(total);\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const positivePercentage = Math.round(\n      (good * 100) / (good + neutral + bad),\n    );\n    return positivePercentage;\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leaven feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={handleBtnClick}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {good || neutral || bad ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}